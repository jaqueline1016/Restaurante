/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ejemplopractica2;

import java.util.Scanner;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ejemplopractica2.HistorialdePedidos;
import static ejemplopractica2.HistorialdePedidos.registros;
import static ejemplopractica2.Recorrido.dateTimeString;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.time.format.DateTimeFormatter;
import ejemplopractica2.Serializar;
import java.awt.List;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;



/**
 *
 * @author jgcal
 */
public class RegistrodeProductos extends javax.swing.JFrame {
    
    //static Calendar Hora = Calendar.getInstance();
    //LocalDate fecha = LocalDate.now();
    public static int vardistancia;
    public static String TypeV;
    public int sumar;
    public static String totalaPagarString;
    public static String tipovehiculo;
    DefaultTableModel modelo;
    public static LocalDateTime dateTime;
    public static String creacion;
    public static int contador = 0;

    /**
     * Creates new form RegistrodeProductos
     */
    public RegistrodeProductos() {
        initComponents();
        this.setLocationRelativeTo(null);
        DefaultTableModel dtm = new DefaultTableModel();
        System.out.println("inicio programa");
        System.out.println(contador);
        
         try{
                FileInputStream archivoread = new FileInputStream("Respaldo.bin");
                    ObjectInputStream entrada = new ObjectInputStream(archivoread);

                    Registro R1 = (Registro) entrada.readObject();
                    System.out.println(R1.dato2 + " " + R1.dato1 + " " + R1.dato3 + " " + R1.dato4 + " " + R1.dato5);
                    RegistroHistorial reg1 = new RegistroHistorial(R1.dato2, R1.dato1, R1.dato3,
                        R1.dato4, R1.dato5);
                    actualizarRegistros(reg1);
                    archivoread.close();
            }catch (Exception e) {
                    System.out.println(e);
            }

        
        //

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabladeProductos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabladePedidos = new javax.swing.JTable();
        agregarproducto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tipomotocicleta = new javax.swing.JComboBox<>();
        recorrido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        page = new javax.swing.JLabel();
        salirdelTodo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1054, 597));
        setMinimumSize(new java.awt.Dimension(1054, 597));
        setPreferredSize(new java.awt.Dimension(1137, 574));
        setResizable(false);
        setSize(new java.awt.Dimension(1137, 574));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Productos");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel2.setText("Pedido");

        int precio1=50;
        int precio2=25;
        int precio3=10;
        int precio4=15;
        tabladeProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [ ][  ] {
                {"Piza Grande", precio1},
                {"Hamburguesa", precio2},
                {"Gaseosa", precio3},
                {"Papas Fritas", precio4}

            },
            new String [] {
                "Producto", "Precio Q"
            }
        ));
        jScrollPane1.setViewportView(tabladeProductos);

        tabladePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio"
            }
        ));
        /*
        tableMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Plato", "Cant", "Precio", "SubTotal", "Comentario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        tableMenu.setRowHeight(23);

        jScrollPane11.setViewportView(tableMenu);

        if (tableMenu.getColumnModel().getColumnCount() > 0) {
            tableMenu.getColumnModel().getColumn(0).setMinWidth(30);
            tableMenu.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableMenu.getColumnModel().getColumn(0).setMaxWidth(50);
            tableMenu.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableMenu.getColumnModel().getColumn(2).setMinWidth(40);
            tableMenu.getColumnModel().getColumn(2).setPreferredWidth(40);
            tableMenu.getColumnModel().getColumn(2).setMaxWidth(50);
            tableMenu.getColumnModel().getColumn(3).setPreferredWidth(50);
            tableMenu.getColumnModel().getColumn(4).setPreferredWidth(60);
        }

        */
        jScrollPane2.setViewportView(tabladePedidos);

        agregarproducto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        agregarproducto.setText("Agregar Productos Seleccionado al Pedido");
        agregarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarproductoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel3.setText("Vehiculo: ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel4.setText("Distancia  a Recorrer:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel5.setText("Km");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Confirmar Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tipomotocicleta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tipomotocicleta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".", "Motocicleta 1", "Motocicleta 2", "Motocicleta 3" }));
        tipomotocicleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipomotocicletaActionPerformed(evt);
            }
        });

        recorrido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recorridoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel6.setText("Total a Pagar:");

        page.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        //totalaPagar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        page.setText(totalaPagarString);

        salirdelTodo.setText("SALIR");
        salirdelTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirdelTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(agregarproducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tipomotocicleta, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(recorrido, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(page, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGap(517, 517, 517)
                .addComponent(salirdelTodo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarproducto)
                    .addComponent(page, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tipomotocicleta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(recorrido)
                    .addComponent(jLabel5)
                    .addComponent(jButton1))
                .addGap(85, 85, 85)
                .addComponent(salirdelTodo)
                .addGap(68, 68, 68))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        contador++;
        if (tipomotocicleta.getSelectedItem().toString() != "Motocicleta 1") { // V1
            if (tipomotocicleta.getSelectedItem().toString() != "Motocicleta 2") { //V2
                if (tipomotocicleta.getSelectedItem().toString() != "Motocicleta 3") { // V3                   
                    // MENSAJE DE EERROR
                    TypeV = "0";
                    JOptionPane.showMessageDialog(this, "Por Favor\n"
                            + "Selecione un vehiculo");

                } else {
                    // CODIGO PARA V2
                    TypeV = "3";

                    this.setVisible(false);
                    VerRecorridos ar = new VerRecorridos();
                    ar.setVisible(true);
                    // Imprimir la hora y la fecha guardada
                    //LocalDateTime dateTime;
                    dateTime = LocalDateTime.now();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    creacion = dateTime.toString();
                    System.out.println("Fecha y hora de creacion: " + dateTime.format(formatter));
                    
                }

            } else {
                // CODIGO PÁRA V2
                TypeV = "2";
                this.setVisible(false);
                VerRecorridos ar = new VerRecorridos();
                ar.setVisible(true);
                // Imprimir la hora y la fecha guardada
                   
                    dateTime = LocalDateTime.now();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    creacion = dateTime.toString();
                    System.out.println("Fecha y hora de creacion: " + dateTime.format(formatter));
            }

        } else {
            // CODIGO SI ES V1
            TypeV = "1";
            this.setVisible(false);
            VerRecorridos ar = new VerRecorridos();
            ar.setVisible(true);
            // Imprimir la hora y la fecha guardada
                   
                    dateTime = LocalDateTime.now();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                    creacion = dateTime.toString();
                    System.out.println("Fecha y hora de creacion: " + dateTime.format(formatter));
        }
        
        
        
        //codigo copia del original 
        /*
        if (tipomotocicleta.getSelectedItem().toString() != "Motocicleta 1") { // V1
            if (tipomotocicleta.getSelectedItem().toString() != "Motocicleta 2") { //V2
                if (tipomotocicleta.getSelectedItem().toString() != "Motocicleta 3") { // V3                   
                    // MENSAJE DE EERROR
                    TypeV = "0";
                    JOptionPane.showMessageDialog(this, "Por Favor\n"
                            + "Selecione un vehiculo");

                } else {
                    // CODIGO PARA V2
                    TypeV = "3";

                    this.setVisible(false);
                    VerRecorridos ar = new VerRecorridos();
                    ar.setVisible(true);
                }

            } else {
                // CODIGO PÁRA V2
                TypeV = "2";
                this.setVisible(false);
                VerRecorridos ar = new VerRecorridos();
                ar.setVisible(true);
            }

        } else {
            // CODIGO SI ES V1
            TypeV = "1";
            this.setVisible(false);
            VerRecorridos ar = new VerRecorridos();
            ar.setVisible(true);
        }
        */

    }//GEN-LAST:event_jButton1ActionPerformed


    private void tipomotocicletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipomotocicletaActionPerformed
        // TODO add your handling code here:
        tipovehiculo = tipomotocicleta.getSelectedItem().toString();
        System.out.println("vehiculo seleccionado:" + tipovehiculo);

        /*if( tipomotocicleta.getSelectedItem().toString()!="Motocicleta 1" ){ // V1
            if (tipomotocicleta.getSelectedItem().toString()!="Motocicleta 2" ){ //V2
               if (tipomotocicleta.getSelectedItem().toString()!= "Motocicleta 3" ){ // V3                   
                   // MENSAJE DE EERROR
                   TypeV = "0";
                   JOptionPane.showMessageDialog(this,"Por Favor"
                           + "Selecione un vehiculo");
                   
                   
               }else{
                   // CODIGO PARA V2
                   TypeV = "3";
               } 
                
            }else{
                // CODIGO PÁRA V2
                TypeV = "2";
            }
            
        }else{
            // CODIGO SI ES V1
            TypeV = "1";
        }
         */
    }//GEN-LAST:event_tipomotocicletaActionPerformed

    private void recorridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recorridoActionPerformed
        // TODO add your handling code here:

        //distancia = recorrido.getText();
        /*
        vardistancia = Integer.parseInt(recorrido.getText());
       System.out.println(vardistancia);
         */
        vardistancia = Integer.parseInt(recorrido.getText());

        if (vardistancia <= 0 || vardistancia > 10) {

            JOptionPane.showMessageDialog(this, "Ingrese nueva distancia\n "
                    + "Distancia aceptada 1km a 10km");

        } else {

        }

    }//GEN-LAST:event_recorridoActionPerformed


    private void agregarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarproductoActionPerformed

        int fila = tabladeProductos.getSelectedRow();
        //tabladeProductos.getComponent(fila);

        if (fila < 0) {
            JOptionPane.showMessageDialog(this, "Por favor Selecione "
                    + "a un Producto");
        } else {
            DefaultTableModel model = (DefaultTableModel) tabladePedidos.getModel();
            int Precio = (int) tabladeProductos.getModel().getValueAt(fila, 1);

            String Producto = (String) tabladeProductos.getModel().getValueAt(fila, 0);
            //De aqui para abajo

            //
            model.addRow(new Object[]{Producto, Precio});//no toques este

            int contar = tabladePedidos.getRowCount();  //cuenta filas
            //contar = contar +1;
            //System.out.println(contar);
            sumar = 0;
            for (int i = 0; i < contar; i++) {
                int P = (int) tabladePedidos.getModel().getValueAt(i, 1);
                //System.out.println(P);
                sumar = sumar + P;
                //System.out.println(sumar);
                //System.out.println(i);

            }
            //System.out.println(sumar);
            //total a pagar 

            Integer totalaPagar = Integer.valueOf(sumar);
            totalaPagarString = totalaPagar.toString();

            //System.out.println("Esto es lo que debe:"+totalaPagarString);
            page.setText(totalaPagar.toString());

            //HistorialdePedidos H = new HistorialdePedidos();
            //H.insertedata();

        }

        /*int contar = tabladePedidos.getRowCount();
        int sumar =0;
        for (int i=0; i<contar; i++){
            sumar = sumar+Precio;
        }
            System.out.println(sumar);
         */
 /*
          if(fila < 0){
            JOptionPane.showMessageDialog(this, "Por favor Selecione "
                    + "a un Producto");
        }else{
         DefaultTableModel model = (DefaultTableModel) tabladePedidos.getModel();
         int Precio = (int) tabladeProductos.getModel().getValueAt(fila, 1);
         String Producto = (String) tabladeProductos.getModel().getValueAt(fila, 0);
         
         model.addRow(new Object[]{Producto,Precio});//no toques este
        }
         */

    }//GEN-LAST:event_agregarproductoActionPerformed

    private void salirdelTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirdelTodoActionPerformed
        // TODO add your handling code here:
        
        try {
                FileOutputStream archivo = new FileOutputStream("Respaldo.bin");
                ObjectOutputStream salida = new ObjectOutputStream(archivo);
                Registro R = new Registro (tipovehiculo, vardistancia,totalaPagarString,creacion,dateTimeString);
                salida.writeObject(R);
                salida.close();
                archivo.close();
                System.out.println("Se ha respaldo su programa en: Respaldo.bin");
                
                FileInputStream archivoread = new FileInputStream("Respaldo.bin");
                ObjectInputStream entrada = new ObjectInputStream(archivoread);

                Registro R1 = (Registro) entrada.readObject();
                System.out.println(R1.dato1);     
                //actualizarRegistros(R);
                HistorialdePedidos(R);
                
                entrada.close();
                archivoread.close();
                
                
                
                
            } catch (Exception e) {
                System.out.println(e);
            }
        
        
        System.exit(0);
    }//GEN-LAST:event_salirdelTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrodeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrodeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrodeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrodeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrodeProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarproducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel page;
    private javax.swing.JTextField recorrido;
    private javax.swing.JButton salirdelTodo;
    private javax.swing.JTable tabladePedidos;
    private javax.swing.JTable tabladeProductos;
    private javax.swing.JComboBox<String> tipomotocicleta;
    // End of variables declaration//GEN-END:variables

    private void actualizarRegistros(RegistroHistorial reg1) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void actualizarRegistros(Registro R) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void HistorialdePedidos(Registro R) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
